ImageRuntimeVersion: v4.0.30319
Assembly nunit.framework, Version=2.6.0.0, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class NUnit.Framework.Randomizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Random
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RandomSeed 'get ' : 
  Methods:
    get_RandomSeed(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetRandomizer(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetRandomizer(ParameterInfo): PrivateScope, Public, Static, HideBySig
    GetDoubles(Int32): PrivateScope, Public, HideBySig
    GetDoubles(Double, Double, Int32): PrivateScope, Public, HideBySig
    GetInts(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Interface NUnit.Framework.IExpectException: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    HandleException(Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Constraints.IResolveConstraint: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.Constraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Properties:
    System.String DisplayName 'get set' : 
    NUnit.Framework.Constraints.ConstraintExpression And 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression With 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Or 'get ' : 
  Methods:
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayName(String): PrivateScope, Public, HideBySig, SpecialName
    WriteMessageTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Matches(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Matches(ActualValueDelegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Matches(T&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_BitwiseAnd(Constraint, Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Constraint, Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalNot(Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    get_And(): PrivateScope, Public, HideBySig, SpecialName
    get_With(): PrivateScope, Public, HideBySig, SpecialName
    get_Or(): PrivateScope, Public, HideBySig, SpecialName
    After(Int32): PrivateScope, Public, HideBySig
    After(Int32, Int32): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.EmptyDirectoryContraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Has: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
  Methods:
    get_No(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_None(): PrivateScope, Public, Static, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, Static, HideBySig
    Property(String): PrivateScope, Public, Static, HideBySig
    get_Length(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, Static, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, Static, HideBySig
    Attribute(): PrivateScope, Public, Static, HideBySig
    Member(Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.NUnitComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
  Properties:
    NUnit.Framework.Constraints.NUnitComparer Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.NUnitComparer`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[T]
  Methods:
    Compare(T, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.ComparisonConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.GreaterThanConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.EqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.EqualConstraint IgnoreCase 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint NoClip 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint AsCollection 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Ulps 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Percent 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Days 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Hours 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Minutes 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Seconds 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Milliseconds 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Ticks 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    get_NoClip(): PrivateScope, Public, HideBySig, SpecialName
    get_AsCollection(): PrivateScope, Public, HideBySig, SpecialName
    Within(Object): PrivateScope, Public, HideBySig
    get_Ulps(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    get_Days(): PrivateScope, Public, HideBySig, SpecialName
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Milliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    Comparer(IComparer): PrivateScope, Public, HideBySig (Obsolete)
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    Using(IEqualityComparer): PrivateScope, Public, HideBySig
    Using(IEqualityComparer`1): PrivateScope, Public, HideBySig
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteMessageTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.IncludeExcludeAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Include 'get set' : 
    System.String Exclude 'get set' : 
    System.String Reason 'get set' : 
  Methods:
    get_Include(): PrivateScope, Public, HideBySig, SpecialName
    set_Include(String): PrivateScope, Public, HideBySig, SpecialName
    get_Exclude(): PrivateScope, Public, HideBySig, SpecialName
    set_Exclude(String): PrivateScope, Public, HideBySig, SpecialName
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    set_Reason(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.PlatformAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.IncludeExcludeAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.CultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.IncludeExcludeAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NUnit.Framework.Constraints.ToleranceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Constraints.ToleranceMode None = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Linear = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Percent = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Ulps = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Constraints.Tolerance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, NUnit.Framework.Constraints.ToleranceMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.Tolerance Empty 'get ' : 
    NUnit.Framework.Constraints.Tolerance Zero 'get ' : 
    NUnit.Framework.Constraints.ToleranceMode Mode 'get ' : 
    System.Object Value 'get ' : 
    NUnit.Framework.Constraints.Tolerance Percent 'get ' : 
    NUnit.Framework.Constraints.Tolerance Ulps 'get ' : 
    NUnit.Framework.Constraints.Tolerance Days 'get ' : 
    NUnit.Framework.Constraints.Tolerance Hours 'get ' : 
    NUnit.Framework.Constraints.Tolerance Minutes 'get ' : 
    NUnit.Framework.Constraints.Tolerance Seconds 'get ' : 
    NUnit.Framework.Constraints.Tolerance Milliseconds 'get ' : 
    NUnit.Framework.Constraints.Tolerance Ticks 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    get_Ulps(): PrivateScope, Public, HideBySig, SpecialName
    get_Days(): PrivateScope, Public, HideBySig, SpecialName
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Milliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.EmptyConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.TestFixtureTearDownAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.ITestCaseData: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Object[] Arguments 'get ' : 
    System.Object Result 'get ' : 
    Boolean HasExpectedResult 'get ' : 
    System.Type ExpectedException 'get ' : 
    System.String ExpectedExceptionName 'get ' : 
    System.String TestName 'get ' : 
    System.String Description 'get ' : 
    Boolean Ignored 'get ' : 
    Boolean Explicit 'get ' : 
    System.String IgnoreReason 'get ' : 
  Methods:
    get_Arguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Result(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ExpectedException(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ExpectedExceptionName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TestName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Ignored(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Explicit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IgnoreReason(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NUnit.Framework.TestCaseAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.ITestCaseData
  Properties:
    System.Object[] Arguments 'get ' : 
    System.Object Result 'get set' : 
    System.Object ExpectedResult 'get ' : 
    Boolean HasExpectedResult 'get ' : 
    System.Collections.IList Categories 'get ' : 
    System.String Category 'get set' : 
    System.Type ExpectedException 'get set' : 
    System.String ExpectedExceptionName 'get set' : 
    System.String ExpectedMessage 'get set' : 
    NUnit.Framework.MessageMatch MatchType 'get set' : 
    System.String Description 'get set' : 
    System.String TestName 'get set' : 
    Boolean Ignore 'get set' : 
    Boolean Ignored 'get set' : 
    Boolean Explicit 'get set' : 
    System.String Reason 'get set' : 
    System.String IgnoreReason 'get set' : 
  Methods:
    get_Arguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Result(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Result(Object): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedResult(): PrivateScope, Public, HideBySig, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Categories(): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedException(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedException(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedExceptionName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedExceptionName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpectedMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_MatchType(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchType(MessageMatch): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_TestName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TestName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Ignore(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignore(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Ignored(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ignored(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Explicit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Explicit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    set_Reason(String): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreReason(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IgnoreReason(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.PropertyAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IDictionary Properties 'get ' : 
  Methods:
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Text: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' :  (Obsolete)
  Methods:
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    Contains(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    DoesNotContain(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    StartsWith(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    DoesNotStartWith(String): PrivateScope, Public, Static, HideBySig
    EndsWith(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    DoesNotEndWith(String): PrivateScope, Public, Static, HideBySig
    Matches(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    DoesNotMatch(String): PrivateScope, Public, Static, HideBySig (Obsolete)
Class NUnit.Framework.GlobalSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double DefaultFloatingPointTolerance : Public, Static
Class NUnit.Framework.ValueSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceName 'get ' : 
    System.Type SourceType 'get ' : 
  Methods:
    get_SourceName(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceType(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.SuiteAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NUnit.Framework.MessageMatch: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.MessageMatch Exact = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.MessageMatch Contains = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.MessageMatch Regex = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.MessageMatch StartsWith = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.ExpectedExceptionAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ExpectedException 'get set' : 
    System.String ExpectedExceptionName 'get set' : 
    System.String ExpectedMessage 'get set' : 
    System.String UserMessage 'get set' : 
    NUnit.Framework.MessageMatch MatchType 'get set' : 
    System.String Handler 'get set' : 
  Methods:
    get_ExpectedException(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpectedException(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedExceptionName(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpectedExceptionName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ExpectedMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpectedMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_UserMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_UserMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_MatchType(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchType(MessageMatch): PrivateScope, Public, HideBySig, SpecialName
    get_Handler(): PrivateScope, Public, HideBySig, SpecialName
    set_Handler(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.IgnoreException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.CollectionConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionItemsEqualConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    Using(IEqualityComparer): PrivateScope, Public, HideBySig
    Using(IEqualityComparer`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.EmptyCollectionConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.UniqueItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionContainsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionEquivalentConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionSubsetConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionOrderedConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.CollectionOrderedConstraint Descending 'get ' : 
  Methods:
    get_Descending(): PrivateScope, Public, HideBySig, SpecialName
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    By(String): PrivateScope, Public, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.CollectionAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type, String, Object[]): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object, String): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.TestCaseSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceName 'get ' : 
    System.Type SourceType 'get ' : 
    System.String Category 'get set' : 
  Methods:
    get_SourceName(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.SetUpFixtureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.CombinatorialAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.PairwiseAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.SequentialAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.StringAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    Contains(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(String, String, String): PrivateScope, Public, Static, HideBySig
    Contains(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String, String): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String, String): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String, String): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String, String): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.ListMapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Property(String): PrivateScope, Public, HideBySig
Class NUnit.Framework.List: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Map(ICollection): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.SuccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.PathConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Properties:
    NUnit.Framework.Constraints.PathConstraint IgnoreCase 'get ' : 
    NUnit.Framework.Constraints.PathConstraint RespectCase 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    get_RespectCase(): PrivateScope, Public, HideBySig, SpecialName
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SamePathConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SubPathConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SamePathOrUnderConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ConstraintExpressionBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Append(ConstraintOperator): PrivateScope, Public, HideBySig
    Append(SelfResolvingOperator): PrivateScope, Public, HideBySig
    Append(Constraint): PrivateScope, Public, HideBySig
Class NUnit.Framework.RequiredAddinAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RequiredAddin 'get ' : 
  Methods:
    get_RequiredAddin(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.ParameterDataAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.ValuesAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.ParameterDataAttribute
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.RandomAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.ValuesAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Is: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Null(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_True(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_False(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, Static, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, Static, HideBySig
    SameAs(Object): PrivateScope, Public, Static, HideBySig
    GreaterThan(Object): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, Static, HideBySig
    AtLeast(Object): PrivateScope, Public, Static, HideBySig
    LessThan(Object): PrivateScope, Public, Static, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, Static, HideBySig
    AtMost(Object): PrivateScope, Public, Static, HideBySig
    TypeOf(Type): PrivateScope, Public, Static, HideBySig
    TypeOf(): PrivateScope, Public, Static, HideBySig
    InstanceOf(Type): PrivateScope, Public, Static, HideBySig
    InstanceOf(): PrivateScope, Public, Static, HideBySig
    InstanceOfType(Type): PrivateScope, Public, Static, HideBySig (Obsolete)
    InstanceOfType(): PrivateScope, Public, Static, HideBySig (Obsolete)
    AssignableFrom(Type): PrivateScope, Public, Static, HideBySig
    AssignableFrom(): PrivateScope, Public, Static, HideBySig
    AssignableTo(Type): PrivateScope, Public, Static, HideBySig
    AssignableTo(): PrivateScope, Public, Static, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, Static, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, Static, HideBySig
    get_Ordered(): PrivateScope, Public, Static, HideBySig, SpecialName
    StringContaining(String): PrivateScope, Public, Static, HideBySig
    StringStarting(String): PrivateScope, Public, Static, HideBySig
    StringEnding(String): PrivateScope, Public, Static, HideBySig
    StringMatching(String): PrivateScope, Public, Static, HideBySig
    SamePath(String): PrivateScope, Public, Static, HideBySig
    SubPath(String): PrivateScope, Public, Static, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, Static, HideBySig
    InRange(T, T): PrivateScope, Public, Static, HideBySig
Interface NUnit.Framework.ITestAction: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NUnit.Framework.ActionTargets Targets 'get ' : 
  Methods:
    BeforeTest(TestDetails): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AfterTest(TestDetails): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Targets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NUnit.Framework.Constraints.EqualityAdapter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    AreEqual(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanCompare(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    For(IComparer): PrivateScope, Public, Static, HideBySig
    For(IEqualityComparer): PrivateScope, Public, Static, HideBySig
    For(IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    For(IComparer`1): PrivateScope, Public, Static, HideBySig
    For(Comparison`1): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.GreaterThanOrEqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PrefixConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
Class NUnit.Framework.Constraints.DelayedConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.Constraint, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    Matches(ActualValueDelegate): PrivateScope, Public, Virtual, HideBySig
    Matches(T&): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.TestFixtureSetUpAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestFixtureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get set' : 
    System.String Category 'get set' : 
    System.Collections.IList Categories 'get ' : 
    System.Object[] Arguments 'get ' : 
    Boolean Ignore 'get set' : 
    System.String IgnoreReason 'get set' : 
    System.Type[] TypeArgs 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_Categories(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    get_Ignore(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignore(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreReason(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreReason(String): PrivateScope, Public, HideBySig, SpecialName
    get_TypeArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeArgs(Type[]): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.MessageWriter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.StringWriter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxLineLength 'get set' : 
  Methods:
    get_MaxLineLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaxLineLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    WriteMessageLine(String, Object[]): PrivateScope, Public, HideBySig
    WriteMessageLine(Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(Constraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(Object, Object, Tolerance): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayStringDifferences(String, String, Int32, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteConnector(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WritePredicate(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteExpectedValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteModifier(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteActualValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteCollectionElements(IEnumerable, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.TextMessageWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.MessageWriter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Pfx_Expected : Public, Static, InitOnly
    System.String Pfx_Actual : Public, Static, InitOnly
    Int32 PrefixLength : Public, Static, InitOnly
  Properties:
    Int32 MaxLineLength 'get set' : 
  Methods:
    get_MaxLineLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MaxLineLength(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WriteMessageLine(Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(Constraint): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(Object, Object): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(Object, Object, Tolerance): PrivateScope, Public, Virtual, HideBySig
    DisplayStringDifferences(String, String, Int32, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteConnector(String): PrivateScope, Public, Virtual, HideBySig
    WritePredicate(String): PrivateScope, Public, Virtual, HideBySig
    WriteModifier(String): PrivateScope, Public, Virtual, HideBySig
    WriteExpectedValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteActualValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteCollectionElements(IEnumerable, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Struct NUnit.Framework.TestStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.TestStatus Inconclusive = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestStatus Skipped = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestStatus Passed = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestStatus Failed = 3 : Public, Static, Literal, HasDefault
Struct NUnit.Framework.TestState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.TestState Inconclusive = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState NotRunnable = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Skipped = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Ignored = 3 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Success = 4 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Failure = 5 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Error = 6 : Public, Static, Literal, HasDefault
    NUnit.Framework.TestState Cancelled = 7 : Public, Static, Literal, HasDefault
Class NUnit.Framework.FileAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo, String): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String): PrivateScope, Public, Static, HideBySig
Interface NUnit.Framework.INUnitEqualityComparer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    AreEqual(Object, Object, Tolerance&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.NUnitEqualityComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.INUnitEqualityComparer
  Properties:
    NUnit.Framework.Constraints.NUnitEqualityComparer Default 'get ' : 
    Boolean IgnoreCase 'get set' : 
    Boolean CompareAsCollection 'get set' : 
    System.Collections.IList ExternalComparers 'get ' : 
    System.Collections.IList FailurePoints 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CompareAsCollection(): PrivateScope, Public, HideBySig, SpecialName
    set_CompareAsCollection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalComparers(): PrivateScope, Public, HideBySig, SpecialName
    get_FailurePoints(): PrivateScope, Public, HideBySig, SpecialName
    AreEqual(Object, Object, Tolerance&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.NUnitEqualityComparer+FailurePoint: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Position : Public
    System.Object ExpectedValue : Public
    System.Object ActualValue : Public
    Boolean ExpectedHasData : Public
    Boolean ActualHasData : Public
Class NUnit.Framework.Constraints.LessThanConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ComparisonAdapter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    NUnit.Framework.Constraints.ComparisonAdapter Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    For(IComparer): PrivateScope, Public, Static, HideBySig
    For(IComparer`1): PrivateScope, Public, Static, HideBySig
    For(Comparison`1): PrivateScope, Public, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.TestAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.ExplicitAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Reason 'get ' : 
  Methods:
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Assume: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String): PrivateScope, Public, Static, HideBySig
    That(Boolean): PrivateScope, Public, Static, HideBySig
    That(TestDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.TestCaseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.ITestCaseData
  Properties:
    System.Object[] Arguments 'get ' : 
    System.Object Result 'get ' : 
    Boolean HasExpectedResult 'get ' : 
    System.Type ExpectedException 'get ' : 
    System.String ExpectedExceptionName 'get ' : 
    System.String TestName 'get ' : 
    System.String Description 'get ' : 
    Boolean Ignored 'get ' : 
    Boolean Explicit 'get ' : 
    System.String IgnoreReason 'get ' : 
    System.Collections.IList Categories 'get ' : 
    System.Collections.IDictionary Properties 'get ' : 
  Methods:
    get_Arguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Result(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedException(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedExceptionName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TestName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ignored(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Explicit(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IgnoreReason(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Categories(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    Returns(Object): PrivateScope, Public, HideBySig
    Throws(Type): PrivateScope, Public, HideBySig
    Throws(String): PrivateScope, Public, HideBySig
    SetName(String): PrivateScope, Public, HideBySig
    SetDescription(String): PrivateScope, Public, HideBySig
    SetCategory(String): PrivateScope, Public, HideBySig
    SetProperty(String, String): PrivateScope, Public, HideBySig
    SetProperty(String, Int32): PrivateScope, Public, HideBySig
    SetProperty(String, Double): PrivateScope, Public, HideBySig
    Ignore(): PrivateScope, Public, HideBySig
    Ignore(String): PrivateScope, Public, HideBySig
    MakeExplicit(): PrivateScope, Public, HideBySig
    MakeExplicit(String): PrivateScope, Public, HideBySig
Class NUnit.Framework.DirectoryAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(DirectoryInfo): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(DirectoryInfo): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String): PrivateScope, Public, Static, HideBySig
    IsWithin(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsWithin(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    IsWithin(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    IsWithin(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsWithin(String, String, String): PrivateScope, Public, Static, HideBySig
    IsWithin(String, String): PrivateScope, Public, Static, HideBySig
    IsNotWithin(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotWithin(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    IsNotWithin(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    IsNotWithin(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotWithin(String, String, String): PrivateScope, Public, Static, HideBySig
    IsNotWithin(String, String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.ThrowsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception ActualException 'get ' : 
  Methods:
    get_ActualException(): PrivateScope, Public, HideBySig, SpecialName
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    Matches(ActualValueDelegate): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ThrowsNothingConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    Matches(ActualValueDelegate): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.TestActionAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Interfaces:
    NUnit.Framework.ITestAction
  Properties:
    NUnit.Framework.ActionTargets Targets 'get ' : 
  Methods:
    BeforeTest(TestDetails): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterTest(TestDetails): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Targets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NUnit.Framework.DescriptionAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.InconclusiveException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Contains: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Substring(String): PrivateScope, Public, Static, HideBySig
    Item(Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.Numerics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    IsNumericType(Object): PrivateScope, Public, Static, HideBySig
    IsFloatingPointNumeric(Object): PrivateScope, Public, Static, HideBySig
    IsFixedPointNumeric(Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, Tolerance&): PrivateScope, Public, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.CollectionTally: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.NUnitEqualityComparer, System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    TryRemove(Object): PrivateScope, Public, HideBySig
    TryRemove(IEnumerable): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.AttributeExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AttributeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(System.Type, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.SetUpAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.IgnoreAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Reason 'get ' : 
  Methods:
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
Struct NUnit.Framework.SpecialValue: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.SpecialValue Null = 0 : Public, Static, Literal, HasDefault
Class NUnit.Framework.TestDetails: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object, System.Reflection.MethodInfo, System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Fixture 'get set' : 
    System.Reflection.MethodInfo Method 'get set' : 
    System.String FullName 'get set' : 
    System.String Type 'get set' : 
    Boolean IsSuite 'get set' : 
  Methods:
    get_Fixture(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSuite(): PrivateScope, Public, HideBySig, SpecialName
Interface NUnit.Framework.INUnitEqualityComparer`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    AreEqual(T, T, Tolerance&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.RangeConstraint`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.IComparable`1[T]
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(T, T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NotConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AllItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SomeItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NoItemConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExactCountConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(Int32, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ConstraintBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsResolvable 'get ' : 
  Methods:
    get_IsResolvable(): PrivateScope, Public, HideBySig, SpecialName
    Append(ConstraintOperator): PrivateScope, Public, HideBySig
    Append(Constraint): PrivateScope, Public, HideBySig
    Resolve(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ConstraintBuilder+OperatorStack: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
    NUnit.Framework.Constraints.ConstraintOperator Top 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    Push(ConstraintOperator): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
    NUnit.Framework.Constraints.Constraint Top 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    Push(Constraint): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.RepeatAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.CategoryAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.ConstraintFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, HideBySig, SpecialName
    get_No(): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, HideBySig, SpecialName
    get_None(): PrivateScope, Public, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, Static, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, HideBySig
    Attribute(): PrivateScope, Public, HideBySig
    get_Null(): PrivateScope, Public, HideBySig, SpecialName
    get_True(): PrivateScope, Public, HideBySig, SpecialName
    get_False(): PrivateScope, Public, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, HideBySig
    SameAs(Object): PrivateScope, Public, HideBySig
    GreaterThan(Object): PrivateScope, Public, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtLeast(Object): PrivateScope, Public, HideBySig
    LessThan(Object): PrivateScope, Public, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtMost(Object): PrivateScope, Public, HideBySig
    TypeOf(Type): PrivateScope, Public, HideBySig
    TypeOf(): PrivateScope, Public, HideBySig
    InstanceOf(Type): PrivateScope, Public, HideBySig
    InstanceOf(): PrivateScope, Public, HideBySig
    InstanceOfType(Type): PrivateScope, Public, HideBySig (Obsolete)
    InstanceOfType(): PrivateScope, Public, HideBySig (Obsolete)
    AssignableFrom(Type): PrivateScope, Public, HideBySig
    AssignableFrom(): PrivateScope, Public, HideBySig
    AssignableTo(Type): PrivateScope, Public, HideBySig
    AssignableTo(): PrivateScope, Public, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, HideBySig
    get_Ordered(): PrivateScope, Public, HideBySig, SpecialName
    Member(Object): PrivateScope, Public, HideBySig
    Contains(Object): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    StringContaining(String): PrivateScope, Public, HideBySig
    ContainsSubstring(String): PrivateScope, Public, HideBySig
    DoesNotContain(String): PrivateScope, Public, HideBySig
    StartsWith(String): PrivateScope, Public, HideBySig
    StringStarting(String): PrivateScope, Public, HideBySig
    DoesNotStartWith(String): PrivateScope, Public, HideBySig
    EndsWith(String): PrivateScope, Public, HideBySig
    StringEnding(String): PrivateScope, Public, HideBySig
    DoesNotEndWith(String): PrivateScope, Public, HideBySig
    Matches(String): PrivateScope, Public, HideBySig
    StringMatching(String): PrivateScope, Public, HideBySig
    DoesNotMatch(String): PrivateScope, Public, HideBySig
    SamePath(String): PrivateScope, Public, HideBySig
    SubPath(String): PrivateScope, Public, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, HideBySig
    InRange(T, T): PrivateScope, Public, HideBySig
Class NUnit.Framework.AssertionHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Expect(Object, IResolveConstraint): PrivateScope, Public, HideBySig
    Expect(Object, IResolveConstraint, String): PrivateScope, Public, HideBySig
    Expect(Object, IResolveConstraint, String, Object[]): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate, IResolveConstraint): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate, IResolveConstraint, String): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate, IResolveConstraint, String, Object[]): PrivateScope, Public, HideBySig
    Expect(T&, IResolveConstraint): PrivateScope, Public, HideBySig
    Expect(T&, IResolveConstraint, String): PrivateScope, Public, HideBySig
    Expect(T&, IResolveConstraint, String, Object[]): PrivateScope, Public, HideBySig
    Expect(Boolean, String, Object[]): PrivateScope, Public, HideBySig
    Expect(Boolean, String): PrivateScope, Public, HideBySig
    Expect(Boolean): PrivateScope, Public, HideBySig
    Expect(TestDelegate, IResolveConstraint): PrivateScope, Public, HideBySig
    Map(ICollection): PrivateScope, Public, HideBySig
Class NUnit.Framework.AssertionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.TypeConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExactTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExceptionTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ExactTypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.InstanceOfTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AssignableFromConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AssignableToConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.StringConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.StringConstraint IgnoreCase 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.EmptyStringConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NullOrEmptyStringConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SubstringConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.StartsWithConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.EndsWithConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.RegexConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ReusableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.IResolveConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Methods:
    op_Implicit(Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Resolve(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.PredicateConstraint`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Predicate`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.LessThanOrEqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.RangeAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.ValuesAttribute
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NUnit.Framework.ActionTargets: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.ActionTargets Default = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.ActionTargets Test = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.ActionTargets Suite = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Throws: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ResolvableConstraintExpression Exception 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint TargetInvocationException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint ArgumentException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint InvalidOperationException 'get ' : 
    NUnit.Framework.Constraints.ThrowsNothingConstraint Nothing 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TargetInvocationException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ArgumentException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidOperationException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Nothing(): PrivateScope, Public, Static, HideBySig, SpecialName
    TypeOf(Type): PrivateScope, Public, Static, HideBySig
    TypeOf(): PrivateScope, Public, Static, HideBySig
    InstanceOf(Type): PrivateScope, Public, Static, HideBySig
    InstanceOf(): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.ConstraintExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintExpressionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression With 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, HideBySig, SpecialName
    get_No(): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, HideBySig, SpecialName
    get_None(): PrivateScope, Public, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, HideBySig
    Attribute(): PrivateScope, Public, HideBySig
    get_With(): PrivateScope, Public, HideBySig, SpecialName
    Matches(Constraint): PrivateScope, Public, HideBySig
    Matches(Predicate`1): PrivateScope, Public, HideBySig
    get_Null(): PrivateScope, Public, HideBySig, SpecialName
    get_True(): PrivateScope, Public, HideBySig, SpecialName
    get_False(): PrivateScope, Public, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, HideBySig
    SameAs(Object): PrivateScope, Public, HideBySig
    GreaterThan(Object): PrivateScope, Public, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtLeast(Object): PrivateScope, Public, HideBySig
    LessThan(Object): PrivateScope, Public, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtMost(Object): PrivateScope, Public, HideBySig
    TypeOf(Type): PrivateScope, Public, HideBySig
    TypeOf(): PrivateScope, Public, HideBySig
    InstanceOf(Type): PrivateScope, Public, HideBySig
    InstanceOf(): PrivateScope, Public, HideBySig
    InstanceOfType(Type): PrivateScope, Public, HideBySig (Obsolete)
    InstanceOfType(): PrivateScope, Public, HideBySig (Obsolete)
    AssignableFrom(Type): PrivateScope, Public, HideBySig
    AssignableFrom(): PrivateScope, Public, HideBySig
    AssignableTo(Type): PrivateScope, Public, HideBySig
    AssignableTo(): PrivateScope, Public, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, HideBySig
    get_Ordered(): PrivateScope, Public, HideBySig, SpecialName
    Member(Object): PrivateScope, Public, HideBySig
    Contains(Object): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    StringContaining(String): PrivateScope, Public, HideBySig
    ContainsSubstring(String): PrivateScope, Public, HideBySig
    StartsWith(String): PrivateScope, Public, HideBySig
    StringStarting(String): PrivateScope, Public, HideBySig
    EndsWith(String): PrivateScope, Public, HideBySig
    StringEnding(String): PrivateScope, Public, HideBySig
    Matches(String): PrivateScope, Public, HideBySig
    StringMatching(String): PrivateScope, Public, HideBySig
    SamePath(String): PrivateScope, Public, HideBySig
    SubPath(String): PrivateScope, Public, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, HideBySig
    InRange(T, T): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ResolvableConstraintExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintExpression
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression And 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Or 'get ' : 
  Methods:
    get_And(): PrivateScope, Public, HideBySig, SpecialName
    get_Or(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.PropertyExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PropertyConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(System.String, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ConstraintOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Object LeftContext 'get set' : 
    System.Object RightContext 'get set' : 
    Int32 LeftPrecedence 'get ' : 
    Int32 RightPrecedence 'get ' : 
  Methods:
    get_LeftContext(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftContext(Object): PrivateScope, Public, HideBySig, SpecialName
    get_RightContext(): PrivateScope, Public, HideBySig, SpecialName
    set_RightContext(Object): PrivateScope, Public, HideBySig, SpecialName
    get_LeftPrecedence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RightPrecedence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.PrefixOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.NotOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.AllOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SomeOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NoneOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExactCountOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.WithOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SelfResolvingOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
Class NUnit.Framework.Constraints.PropOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AttributeOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ThrowsOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.BinaryOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
  Properties:
    Int32 LeftPrecedence 'get ' : 
    Int32 RightPrecedence 'get ' : 
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
    get_LeftPrecedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RightPrecedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyOperator(Constraint, Constraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.AndOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyOperator(Constraint, Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.OrOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyOperator(Constraint, Constraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ActualValueDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.MaxTimeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.TestContext CurrentContext 'get ' : 
    TestAdapter Test 'get ' : 
    ResultAdapter Result 'get ' : 
    System.String TestDirectory 'get ' : 
    System.String WorkDirectory 'get ' : 
  Methods:
    get_CurrentContext(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_TestDirectory(): PrivateScope, Public, HideBySig, SpecialName
    get_WorkDirectory(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.TestContext+TestAdapter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    System.Collections.IDictionary Properties 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.TestContext+ResultAdapter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.TestState State 'get ' : 
    NUnit.Framework.TestStatus Status 'get ' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.BinarySerializableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.XmlSerializableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SameAsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ContainsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ContainsConstraint IgnoreCase 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    Using(IEqualityComparer): PrivateScope, Public, HideBySig
    Using(IEqualityComparer`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.TimeoutAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresSTAAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresMTAAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresThreadAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.ApartmentState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TheoryAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TearDownAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DatapointAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DatapointsAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Assert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Int32 Counter 'get ' : 
  Methods:
    GreaterOrEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection, String): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object): PrivateScope, Public, Static, HideBySig
    IsInstanceOfType(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsInstanceOfType(Type, Object, String): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsInstanceOfType(Type, Object): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsInstanceOf(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Object, String): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Object): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOfType(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsNotInstanceOfType(Type, Object, String): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsNotInstanceOfType(Type, Object): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsNotInstanceOf(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Object, String): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double, String): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single, String): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Less(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Double, Double, String): PrivateScope, Public, Static, HideBySig
    Less(Double, Double): PrivateScope, Public, Static, HideBySig
    Less(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Single, Single, String): PrivateScope, Public, Static, HideBySig
    Less(Single, Single): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    get_Counter(): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    Pass(String, Object[]): PrivateScope, Public, Static, HideBySig
    Pass(String): PrivateScope, Public, Static, HideBySig
    Pass(): PrivateScope, Public, Static, HideBySig
    Fail(String, Object[]): PrivateScope, Public, Static, HideBySig
    Fail(String): PrivateScope, Public, Static, HideBySig
    Fail(): PrivateScope, Public, Static, HideBySig
    Ignore(String, Object[]): PrivateScope, Public, Static, HideBySig
    Ignore(String): PrivateScope, Public, Static, HideBySig
    Ignore(): PrivateScope, Public, Static, HideBySig
    Inconclusive(String, Object[]): PrivateScope, Public, Static, HideBySig
    Inconclusive(String): PrivateScope, Public, Static, HideBySig
    Inconclusive(): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(Object, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(T&, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String): PrivateScope, Public, Static, HideBySig
    That(Boolean): PrivateScope, Public, Static, HideBySig
    That(TestDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate): PrivateScope, Public, Static, HideBySig
    True(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    True(Boolean, String): PrivateScope, Public, Static, HideBySig
    True(Boolean): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean, String): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean): PrivateScope, Public, Static, HideBySig
    False(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    False(Boolean, String): PrivateScope, Public, Static, HideBySig
    False(Boolean): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean, String): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean): PrivateScope, Public, Static, HideBySig
    NotNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    NotNull(Object, String): PrivateScope, Public, Static, HideBySig
    NotNull(Object): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object, String): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object): PrivateScope, Public, Static, HideBySig
    Null(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    Null(Object, String): PrivateScope, Public, Static, HideBySig
    Null(Object): PrivateScope, Public, Static, HideBySig
    IsNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNull(Object, String): PrivateScope, Public, Static, HideBySig
    IsNull(Object): PrivateScope, Public, Static, HideBySig
    IsNaN(Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNaN(Double, String): PrivateScope, Public, Static, HideBySig
    IsNaN(Double): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1, String): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNullOrEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNullOrEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsNullOrEmpty(String): PrivateScope, Public, Static, HideBySig
    IsNotNullOrEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotNullOrEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsNotNullOrEmpty(String): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object, String): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object, String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.MsgUtils: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTypeRepresentation(Object): PrivateScope, Public, Static, HideBySig
    EscapeControlChars(String): PrivateScope, Public, Static, HideBySig
    GetArrayIndicesAsString(Int32[]): PrivateScope, Public, Static, HideBySig
    GetArrayIndicesFromCollectionIndex(IEnumerable, Int32): PrivateScope, Public, Static, HideBySig
    ClipString(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ClipExpectedAndActual(String&, String&, Int32, Int32): PrivateScope, Public, Static, HideBySig
    FindMismatchPosition(String, String, Int32, Boolean): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.FloatingPointNumerics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    AreAlmostEqualUlps(Single, Single, Int32): PrivateScope, Public, Static, HideBySig
    AreAlmostEqualUlps(Double, Double, Int64): PrivateScope, Public, Static, HideBySig
    ReinterpretAsInt(Single): PrivateScope, Public, Static, HideBySig
    ReinterpretAsLong(Double): PrivateScope, Public, Static, HideBySig
    ReinterpretAsFloat(Int32): PrivateScope, Public, Static, HideBySig
    ReinterpretAsDouble(Int64): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.BinaryConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.AndConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.OrConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryConstraint
    Void .ctor(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.SetUICultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Iz: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Is
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.BasicConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NullConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BasicConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.TrueConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BasicConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.FalseConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BasicConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.NaNConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Matches(Object): PrivateScope, Public, Virtual, HideBySig
    WriteDescriptionTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.SetCultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
